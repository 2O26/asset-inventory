services:
  frontenddev:
    image: frontenddev
    ports:
      - 3000:3000
    volumes:
      - ./Containers/FrontEnd/src:/app/src

  assethandler:
    image: assethandler
    ports:
      - "8080:8080"

  networkscan:
    image: networkscan
    ports:
      - "8081:8081"

  confighandler:
    image: confighandler
    restart: always
    ports:
      - "3001:3001"
    volumes:
      - ./Containers/ConfigHandler/src:/app/src
    depends_on:
      - keycloak

  cyclonedx:
    image: cyclonedx
    ports:
      - "8082:8082"

  cvescanner:
    image: cvescanner
    volumes:
      - ./Containers/CVEScanner/src:/app/src
    ports:
      - "3002:3002"
    # env_file:
    #   - ./Containers/CVEScanner/.env

  netscanstorage:
    image: mongo
    restart: always
    command: [ "mongod", "--port", "27019", "--quiet", "--syslog" ]
    ports:
      - "27019:27019"
    expose:
      - "27019"
    volumes:
      - netscanstorage:/data/db
      - netscanconfig:/data/configdb

  dbstorage:
    image: mongo
    restart: always
    command: --quiet --syslog
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - dbstorage:/data/db
      - dbconfig:/data/configdb

  configstorage:
    image: mongo
    restart: always
    command: [ "mongod", "--port", "27018", "--quiet", "--syslog" ]
    ports:
      - "27018:27018"
    expose:
      - "27018"
    volumes:
      - configstorage:/data/db
      - configdbconfig:/data/configdb

  cyclonedxstorage:
    image: mongo
    restart: always
    command: [ "mongod", "--port", "27020", "--quiet", "--syslog" ]
    ports:
      - "27020:27020"
    expose:
      - "27020"
    volumes:
      - cyclonedxstorage:/data/db
      - cyclonedxconfig:/data/configdb

  keycloakstorage:
    image: postgres:latest
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_data:/var/lib/postgresql/data

  keycloak:
    image: keycloak_local
    ports:
      - "8085:8085"
      - "8443:8443"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakstorage:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin # makeTheDevelopersLifesH4RDbySettingAwaytoLongPassword!
      KC_HEALTH_ENABLED: true
    depends_on:
      - keycloakstorage

  clientinit:
    image: clientinit
    depends_on:
      - keycloak

  authhandler:
    image: authhandler
    volumes:
      - ./Containers/AuthHandler/src:/app/src
    depends_on:
      - keycloak
  mkdocs:
    container_name: mkdocs
    image: squidfunk/mkdocs-material
    restart: always
    ports:
      - "6880:8000"
    volumes:
      - "./Containers/docs:/docs:ro"
  ######################################################
  ###     Test Environment (nginx, postgres, cypress)   ###
  ######################################################


  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"
    networks:
      - test_network

  cypress:
    image: cypresslocal
      # - dbstorage
      # - assethandler
      # - configstorage
      # - confighandler
      # - networkscan

volumes:
  configstorage:
  configdbconfig:
  dbstorage:
  dbconfig:
  netscanstorage:
  netscanconfig:
  keycloak_data:
  cyclonedxstorage:
  cyclonedxconfig:
  test_coverage:


networks:
  test_network:
    driver: bridge
